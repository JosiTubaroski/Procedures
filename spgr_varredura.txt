use SIRCOI
go

    
ALTER procedure [dbo].[spgr_varredura]    
@id_todos_clientes bit,    
@cd_cliente dt_cd_cliente,    
@id_grupo_econ bit,    
@id_relacionamento bit,    
@cd_produto int,    
@dt_inicio smalldatetime,    
@dt_final smalldatetime,    
@id_automatica bit,    
@id_mensal bit = 0,    
@cd_usuario int = null,    
@id_resumir bit = 0    
    
as    
begin try    
set dateformat mdy;    
    
 --Variaveis    
    
 declare @cd_varredura_aut  int;     
 declare @vl_total_mov   float;    
 declare @cd_cliente_int   dt_cd_cliente;    
 declare @cd_produto_int   int;    
 declare @cd_enquadramento  smallint;    
 declare @nm_stored_proc   varchar(50);    
 declare @dc_execucao_sp   varchar(300);    
 declare @dt_inicio_varredura datetime;    
 declare @hr_ultimo_cliente   datetime;    
 declare @vl_contador_total   int;    
 declare @tp_carga    tinyint;    
 declare @cd_produto_resumir  int;    
 declare @cd_cliente_resumir  dt_cd_cliente;    
    
  -- Criar tabela temporaria para movimentação Corretora    
    
    if object_id('tempdb..##ttp_movto') is not null        
  drop table ##ttp_movto;      
      
 -- cria temp para movimentacao       
 create table ##ttp_movto      
 (cd_cliente  int   null,      
  cd_ativo  varchar(20) null, --collate SQL_Latin1_General_CP1_CI_AS null,      
  cd_mercado  varchar(3) null, -- collate SQL_Latin1_General_CP1_CI_AS null,      
  dc_mercado  varchar(30) null, --collate SQL_Latin1_General_CP1_CI_AS null,      
  cd_contraparte varchar(6) null, -- collate SQL_Latin1_General_CP1_CI_AS null,      
  nr_ordem  bigint   null,      
  nr_negocio  numeric(12) null,      
  tp_negocio  char(2) null, -- collate SQL_Latin1_General_CP1_CI_AS null,      
  tp_operacao  char(1) null, -- collate SQL_Latin1_General_CP1_CI_AS null,      
  vl_total  money  null,      
  qt_negocio  numeric(15) null,      
  vl_negocio  money  null,      
  hr_negocio  time  null,      
  id_daytrade  bit   null)      
    
 --Cria tabela temp    
    
 create table #ttp_cliente(    
 cd_cliente int    
 );    
    
 if (@id_resumir = 1)    
 begin    
    
  set @id_automatica = 1;    
  set @id_todos_clientes = 1;    
  set @cd_cliente = '';    
  set @id_grupo_econ = 0;    
  set @id_relacionamento = 0;    
  set @cd_usuario = null;    
    
 end    
    
 if (@cd_produto = 0)    
    
 begin    
    
  declare cr_produtos cursor    
  for    
  select cd_produto    
  from dbo.tpr_produtos_varredura;    
    
 end    
 else    
 begin    
  declare cr_produtos cursor    
  for    
  select cd_produto    
  from dbo.tpr_produtos_varredura    
  where cd_produto = @cd_produto;    
    
 end    
    
 open cr_produtos    
 fetch next from cr_produtos into @cd_produto_int    
    
 --Cursor Produtos    
    
 while @@fetch_status = 0    
 begin    
    
  if ((@id_resumir = 1) and (@id_automatica = 1) and (@id_todos_clientes = 1))    
  begin    
    
   select  top 1     
    
     @cd_varredura_aut  = cd_varredura_aut,    
     @dt_inicio_varredura = dt_inicio,     
     @cd_produto_resumir  = cd_produto,    
     @cd_cliente_resumir  = cd_atual,     
     @tp_carga         = tp_carga,     
     @dt_inicio     = dt_carr_inicio,    
     @dt_final         = dt_carr_final    
   from  dbo.tsv_status_varredura with (nolock)    
    
   where  id_terminado = 0    
   order by dt_inicio desc    
     
   set @hr_ultimo_cliente  = @dt_inicio_varredura    
   if @tp_carga = 1    
    set @id_mensal = 0    
   else    
    if @tp_carga = 2    
   set @id_mensal = 1    
    
   if convert(int, @cd_cliente_resumir) > 0    
    while @cd_produto_int <> @cd_produto_resumir    
     fetch next from cr_produtos into @cd_produto_int    
    
  end    
    
  if ((@id_resumir = 0) and (@id_automatica = 1) and (@id_todos_clientes = 1))    
  begin    
    
   set @dt_inicio_varredura = getdate()    
   set @hr_ultimo_cliente   = @dt_inicio_varredura    
   if  @id_mensal = 0    
    set @tp_carga = 1    
   else    
   if  @id_mensal = 1    
    set @tp_carga = 2    
    
   insert into dbo.tsv_status_varredura (dt_inicio, tp_carga, cd_atual, cd_produto, dt_carr_inicio, dt_carr_final, vl_contador_atual, vl_contador_total, vl_tempo_carga_cliente, id_terminado)    
   values(@dt_inicio_varredura, @tp_carga, '0', @cd_produto_int, @dt_inicio, @dt_final, 0, 0, '00:00', 0);    
   set @cd_varredura_aut = scope_identity();    
    
  end    
      
  if (@cd_produto_int = 1) --Clientes    
  begin    
    
   if (@id_todos_clientes = 1)     
    
   begin    
    
    --Alertas coligados    
    
    exec dbo.spgr_grava_alertas_coligados @dt_inicio, @dt_final, @cd_produto, @id_mensal    
    
    insert into #ttp_cliente (cd_cliente)       
    select  tcl.cd_cliente -- Verificar    
    from dbo.tcl_cliente tcl with (nolock)    
    join dbo.tcl_cliente_detalhe_generico cdg with (nolock) on tcl.cd_cliente = cdg.cd_cliente --Verificar    
    where ltrim(rtrim(cdg.dc_status)) = 'ACTIVE' --Verificar    
  union  
  select  tcl.cd_cliente -- Incluindo na analise os clientes corretora  
    from dbo.tcl_cliente tcl with (nolock)    
    join dbo.tcl_cliente_detalhe_bolsa cdg with (nolock) on tcl.cd_cliente = cdg.cd_cliente --Incluindo na analise os clientes corretora   
    
    set @vl_contador_total = @@rowcount;    
    
   end    
   else    
   begin    
     
    insert into #ttp_cliente( cd_cliente )    
    values(@cd_cliente);     
    
   end     
    
  end    
  else    
    
  if (@cd_produto_int = 2) --Conta Corrente    
    
  begin    
    
   if (@id_todos_clientes = 1) --Todos os Clientes    
    
   begin    
    
    if (@id_mensal = 0) --Diária    
    begin    
      
     insert into #ttp_cliente (cd_cliente)       
     select  distinct ccc.cd_cliente    
     from dbo.tcc_mov_conta_corr    mcc with (nolock)         
     join dbo.tcc_cliente_conta_corr ccc with (nolock) on mcc.cd_agencia = ccc.cd_agencia    
     join dbo.tcl_cliente_detalhe_generico cdg with (nolock) on ccc.cd_cliente = cdg.cd_cliente --Verificar    
     and  mcc.nm_conta_corr = ccc.nm_conta_corr    
     join dbo.tgr_cargas      grc with (nolock) on mcc.cd_carga = grc.cd_carga    
     and  grc.cd_produto = 2    
     and  grc.id_termino = 1     
     and  left(rtrim(ltrim(grc.nm_arquivo)), 9) = 'CONTA_MOV'    
     where grc.dt_referencia between @dt_inicio and @dt_final    
     and  ltrim(rtrim(cdg.dc_status)) = 'ACTIVE' --Verificar    
    
    
     set @vl_contador_total = @@rowcount;    
    
    end    
    else --Mensal     
    begin    
    
     insert into #ttp_cliente (cd_cliente)       
     select  distinct ccc.cd_cliente    
     from dbo.tcc_mov_conta_corr    mcc with (nolock)    
     join dbo.tcc_cliente_conta_corr ccc with (nolock) on mcc.cd_agencia = ccc.cd_agencia    
     join dbo.tcl_cliente_detalhe_generico cdg with (nolock) on ccc.cd_cliente = cdg.cd_cliente --Verificar    
     and  mcc.nm_conta_corr = ccc.nm_conta_corr    
     where mcc.dt_movimentacao between @dt_inicio and @dt_final    
     and  ltrim(rtrim(cdg.dc_status)) = 'ACTIVE' --Verificar    
    
     set @vl_contador_total = @@rowcount;    
    
    end    
    
   end    
   else    
   begin    
    
    insert into #ttp_cliente( cd_cliente )    
    values(@cd_cliente);     
    
   end    
    
  end    
  else    
  if (@cd_produto_int = 3) --Câmbio    
  begin    
    
   if (@id_todos_clientes = 1) --Todos os Clientes    
    
   begin    
    
    if (@id_mensal = 0) --Diária    
    begin    
    
     insert into #ttp_cliente (cd_cliente)       
     select  distinct ctr.cd_cliente    
     from dbo.tcb_contrato  ctr with (nolock)    
     join dbo.tcl_cliente_detalhe_generico cdg with (nolock) on ctr.cd_cliente = cdg.cd_cliente --Verificar    
     join dbo.tcb_contrato_evento cte with (nolock) on ctr.cd_contrato = cte.cd_contrato    
     join dbo.tgr_cargas   grc with (nolock) on cte.cd_carga = grc.cd_carga    
     and  grc.cd_produto = 3    
     and  grc.id_termino = 1     
     and  left(rtrim(ltrim(grc.nm_arquivo)), 13) = 'CAMBIO_EVENTO'    
     where grc.dt_referencia between @dt_inicio and @dt_final    
     and  ltrim(rtrim(cdg.dc_status)) = 'ACTIVE' --Verificar    
    
     set @vl_contador_total = @@rowcount;    
    
    end    
    else    
    begin    
    
     --Alertas coligados    
    
     exec dbo.spgr_grava_alertas_coligados @dt_inicio, @dt_final, @cd_produto, @id_mensal    
    
     insert into #ttp_cliente (cd_cliente)       
     select  distinct ctr.cd_cliente    
     from dbo.tcb_contrato  ctr with (nolock)    
     join dbo.tcl_cliente_detalhe_generico cdg with (nolock) on ctr.cd_cliente = cdg.cd_cliente --Verificar    
     join dbo.tcb_contrato_evento cte with (nolock) on ctr.cd_contrato = cte.cd_contrato    
     where cte.dt_operacao between @dt_inicio and @dt_final    
     and  ltrim(rtrim(cdg.dc_status)) = 'ACTIVE'--Verificar    
    
     set @vl_contador_total = @@rowcount;    
    
    end    
   end    
   else    
   begin    
    
    insert into #ttp_cliente( cd_cliente )    
    values(@cd_cliente);     
    
   end    
    
  end    
  else    
  if (@cd_produto_int = 4) --Renda Fixa    
  begin    
    
   if (@id_todos_clientes = 1) --Todos os Clientes    
    
   begin    
    
    if (@id_mensal = 0) --Diária    
    
    begin    
    
     insert into #ttp_cliente (cd_cliente)       
     select  distinct rfo.cd_cliente    
     from dbo.trf_operacao rfo with (nolock)    
     join dbo.tcl_cliente_detalhe_generico cdg with (nolock) on rfo.cd_cliente = cdg.cd_cliente --Verificar    
     join dbo.tgr_cargas  grc with (nolock) on rfo.cd_carga = grc.cd_carga    
     and  grc.cd_produto = 4    
     and  grc.id_termino = 1     
     and  left(rtrim(ltrim(grc.nm_arquivo)), 10) = 'RENDA_FIXA'    
     where grc.dt_referencia between @dt_inicio and @dt_final    
     and  ltrim(rtrim(cdg.dc_status)) = 'ACTIVE' --Verificar    
    
     set @vl_contador_total = @@rowcount;    
    
    end    
    else --Mensal    
    begin    
    
    set @vl_contador_total = 0    
    
    end    
    
   end    
   else    
   begin    
    
    insert into #ttp_cliente( cd_cliente )    
    values(@cd_cliente);        
    
   end    
    
  end    
    
  else    
    
  if (@cd_produto_int = 5) --Swap    
    
  begin    
    
   if (@id_todos_clientes = 1) --Todos os Clientes    
   begin    
    
    if (@id_mensal = 0) --Diária    
    begin    
    
     insert into #ttp_cliente (cd_cliente)       
     select  distinct swo.cd_cliente    
     from dbo.tsw_operacao swo with (nolock)    
     join dbo.tcl_cliente_detalhe_generico cdg with (nolock) on swo.cd_cliente = cdg.cd_cliente --Verificar    
     join dbo.tgr_cargas  grc with (nolock) on swo.cd_carga = grc.cd_carga    
     and  grc.cd_produto = 5    
     and  grc.id_termino = 1     
     and  left(rtrim(ltrim(grc.nm_arquivo)), 4) = 'SWAP'    
     where grc.dt_referencia between @dt_inicio and @dt_final    
     and  ltrim(rtrim(cdg.dc_status)) = 'ACTIVE' --Verificar    
    
     set @vl_contador_total = @@rowcount;    
    
    end    
    else --Mensal    
    begin    
    
    set @vl_contador_total = 0    
    
    end    
    
   end    
    
   else    
    
   begin    
    
    insert into #ttp_cliente( cd_cliente )    
    values(@cd_cliente);     
    
   end    
    
  end    
    
  else    
    
  if (@cd_produto_int = 6) --Empréstimos    
    
  begin      
    
   if (@id_todos_clientes = 1) --Todos os Clientes    
   begin    
    
    if (@id_mensal = 0) --Diária    
    begin    
    
     insert into #ttp_cliente (cd_cliente)       
     select  distinct epo.cd_cliente    
     from dbo.tep_contrato epo with (nolock)    
     join dbo.tcl_cliente_detalhe_generico cdg with (nolock) on epo.cd_cliente = cdg.cd_cliente --Verificar    
     join dbo.tgr_cargas  grc with (nolock) on epo.cd_carga = grc.cd_carga    
     and  grc.cd_produto = 6    
     and  grc.id_termino = 1     
     and  left(rtrim(ltrim(grc.nm_arquivo)), 11) = 'EMPRESTIMOS'    
     where grc.dt_referencia between @dt_inicio and @dt_final    
     and  ltrim(rtrim(cdg.dc_status)) = 'ACTIVE' --Verificar    
    
     set @vl_contador_total = @@rowcount;    
    end    
    else    
    
    if (@id_mensal = 1) --Mensal    
    
    begin    
    
     insert into #ttp_cliente (cd_cliente)       
     select  distinct tpc.cd_cliente    
     from dbo.tep_contrato tpc with (nolock)    
     join dbo.tcl_cliente_detalhe_generico cdg with (nolock) on tpc.cd_cliente = cdg.cd_cliente --Verificar    
     where tpc.dt_operacao between @dt_inicio and @dt_final    
     and  ltrim(rtrim(cdg.dc_status)) = 'ACTIVE' --Verificar    
    
     set @vl_contador_total = @@rowcount;    
    
    end    
    
   end    
   else    
   begin    
    
    insert into #ttp_cliente( cd_cliente )    
    values(@cd_cliente);     
    
   end    
    
  end    
    
  else    
    
  if (@cd_produto_int = 7) --Linha de Crédito    
  begin    
    
   if (@id_todos_clientes = 1) --Todos os Clientes    
   begin    
    
    if (@id_mensal = 0) --Diária    
    begin    
    
     insert into #ttp_cliente (cd_cliente)       
     select  distinct ctr.cd_cliente    
     from dbo.tlc_contrato  ctr with (nolock)    
     join dbo.tcl_cliente_detalhe_generico cdg with (nolock) on ctr.cd_cliente = cdg.cd_cliente --Verificar    
     join dbo.tlc_contrato_evento cte with (nolock) on ctr.cd_filial = cte.cd_filial    
     and  ctr.cd_contrato = cte.cd_contrato    
     and  ctr.tp_contrato = cte.tp_contrato    
     join dbo.tgr_cargas   grc with (nolock) on cte.cd_carga = grc.cd_carga    
     and  grc.cd_produto = 7    
     and  grc.id_termino = 1     
     and     left(rtrim(ltrim(grc.nm_arquivo)), 16) = 'LINHA_CREDITO_EV'    
     where grc.dt_referencia between @dt_inicio and @dt_final    
     and  ltrim(rtrim(cdg.dc_status)) = 'ACTIVE' --Verificar    
    
     set @vl_contador_total = @@rowcount;    
    
    end    
    else    
    begin    
    
     --Alertas coligados    
    
     exec dbo.spgr_grava_alertas_coligados @dt_inicio, @dt_final, @cd_produto, @id_mensal    
    
     insert into #ttp_cliente (cd_cliente)       
     select  distinct ctr.cd_cliente    
     from dbo.tlc_contrato  ctr with (nolock)    
     join dbo.tcl_cliente_detalhe_generico cdg with (nolock) on ctr.cd_cliente = cdg.cd_cliente --Verificar    
     join dbo.tlc_contrato_evento cte with (nolock) on ctr.cd_filial = cte.cd_filial    
     and  ctr.cd_contrato = cte.cd_contrato    
     and  ctr.tp_contrato = cte.tp_contrato    
     where cte.dt_operacao between @dt_inicio and @dt_final    
     and  ltrim(rtrim(cdg.dc_status)) = 'ACTIVE' --Verificar    
     union  
   select  tcl.cd_cliente -- Incluindo na analise os clientes corretora  
     from dbo.tcl_cliente tcl with (nolock)    
     join dbo.tcl_cliente_detalhe_bolsa cdg with (nolock) on tcl.cd_cliente = cdg.cd_cliente --Incluindo na analise os clientes corretora   
    
     set @vl_contador_total = @@rowcount;    
    
    end    
    
   end    
   else    
   begin    
    
    insert into #ttp_cliente( cd_cliente )    
    values(@cd_cliente);     
    
   end    
    
  end    
  else    
    
  if (@cd_produto_int = 8) --Consolidados    
    
  begin    
    
   if (@id_todos_clientes = 1)     
   begin    
    
    insert into #ttp_cliente (cd_cliente)       
    select  tcl.cd_cliente -- Verificar    
    from dbo.tcl_cliente tcl with (nolock)    
    join dbo.tcl_cliente_detalhe_generico cdg with (nolock) on tcl.cd_cliente = cdg.cd_cliente --Verificar    
    where ltrim(rtrim(cdg.dc_status)) = 'ACTIVE' --Verificar    
    
    set @vl_contador_total = @@rowcount;    
    
   end    
   else    
   begin    
    
    insert into #ttp_cliente( cd_cliente )    
    values(@cd_cliente);     
    
   end     
    
  end    
    
--- Começando o contador de corretora    
      else    
      if (@cd_produto_int = 9) --Corretora    
  begin    
    
   if (@id_todos_clientes = 1)     
   begin    
    
       if (@id_mensal = 0) --Diario    
   begin    
    
         insert into #ttp_cliente (cd_cliente)      
         select distinct crm.cd_cliente          
             from dbo.tbl_operacao_corretora crm with (nolock)         
             join dbo.tgr_cargas gc with (nolock)       
             on crm.cd_carga = gc.cd_carga         
             and gc.cd_produto = 10        
             where gc.dt_referencia between @dt_inicio and @dt_final    
    union    
    --- Incluir todas masters - ALF    
   select distinct a.cd_cliente    
   from dbo.tcl_cliente_detalhe_bolsa a    
   where cd_cliente_bolsa = cd_master            
           
       
         set @vl_contador_total = @@rowcount;    
    
          insert into ##ttp_movto(cd_cliente, cd_ativo, cd_mercado, dc_mercado, cd_contraparte, nr_ordem, nr_negocio, tp_negocio,       
                                  tp_operacao, vl_total, qt_negocio, vl_negocio, hr_negocio, id_daytrade)      
          select distinct ope.cd_cliente, ope.dc_papel, ope.cd_mercado, ope.dc_mercado, ope.cd_contraparte, ope.cd_chave,       
          ope.nr_negocio, ope.tp_neg, ope.dc_operacao,       
          sum((ope.vl_negocio/case when ope.vl_fator_cotacao = 0 then 1 else ope.vl_fator_cotacao end) * ope.qt_negocio)as vl_total,       
          sum(ope.qt_negocio)as qt_negocio,      
          sum(ope.vl_negocio)as vl_negocio,      
          ope.dc_hr_neg, ope.id_daytrade      
          from dbo.tbl_operacao_corretora ope with (nolock)      
          join dbo.tgr_cargas grc with (nolock)       
          on ope.cd_carga = grc.cd_carga      
          where grc.dt_referencia = @dt_inicio      
          and grc.cd_produto = 10      
          and ope.qt_negocio is not null      
          and ope.vl_negocio is not null      
          group by ope.cd_cliente, ope.dc_papel, ope.cd_mercado, ope.dc_mercado, ope.cd_contraparte,       
          ope.cd_chave, ope.nr_negocio, ope.tp_neg, ope.dc_operacao, ope.dc_hr_neg, ope.id_daytrade      
    
         -- executa calculo do percentual para perda ou ganho  para operações DT      
          exec dbo.spcr_calcula_percentual_perda_ganho @dt_inicio      
      
         -- executa calculo do percentual para perda ou ganho  para operações DT especifico para contraparte      
         exec dbo.spcr_calcula_percentual_perda_ganho_contraparte @dt_inicio      
              
         End     
         else --Mensal    
    
         Begin    
    
         insert into #ttp_cliente (cd_cliente)      
         select distinct cd_cliente          
         from dbo.tbl_operacao_corretora with (nolock)        
         where dt_ordem between @dt_inicio and @dt_final      
   union    
    --- Incluir todas masters - ALF    
   select distinct a.cd_cliente    
   from dbo.tcl_cliente_detalhe_bolsa a    
   where cd_cliente_bolsa = cd_master         
             
         set @vl_contador_total = @@rowcount;    
    
             insert into ##ttp_movto(cd_cliente, cd_ativo, cd_mercado, dc_mercado, cd_contraparte, nr_ordem, nr_negocio, tp_negocio,       
                                     tp_operacao, vl_total, qt_negocio, vl_negocio, hr_negocio, id_daytrade)      
             select distinct ope.cd_cliente, ope.dc_papel, ope.cd_mercado, ope.dc_mercado, ope.cd_contraparte, ope.cd_chave,      
             ope.nr_negocio, ope.tp_neg, ope.dc_operacao,       
             sum((ope.vl_negocio/case when ope.vl_fator_cotacao = 0 then 1 else ope.vl_fator_cotacao end) * ope.qt_negocio)as vl_total,       
             sum(ope.qt_negocio)as qt_negocio,      
             sum(ope.vl_negocio)as vl_negocio,      
             ope.dc_hr_neg, ope.id_daytrade      
             from dbo.tbl_operacao_corretora ope with (nolock)      
             where ope.dt_ordem between @dt_inicio and @dt_final     
             and ope.qt_negocio is not null      
             and ope.vl_negocio is not null      
             group by ope.cd_cliente, ope.dc_papel, ope.cd_mercado, ope.dc_mercado, ope.cd_contraparte,       
             ope.cd_chave, ope.nr_negocio, ope.tp_neg, ope.dc_operacao, ope.dc_hr_neg, ope.id_daytrade     
    
    
         End    
    
       End    
       else    
       begin    
       insert into #ttp_cliente( cd_cliente )    
   values(@cd_cliente);     
       End    
    
 End    
    
--Atualiza a Quantidade de clientes que serão varridos    
    
  if (@id_todos_clientes = 1)     
  begin    
    
   update dbo.tsv_status_varredura    
   set    vl_contador_total = @vl_contador_total    
   where  cd_varredura_aut  = @cd_varredura_aut    
    
  end    
    
  --Declara o cursor com o resultado     
    
  declare cr_clientes cursor    
  for    
  select distinct cd_cliente     
  from #ttp_cliente     
  order by cd_cliente    
    
  open cr_clientes    
  fetch next from cr_clientes into @cd_cliente_int    
  if ((@id_resumir = 1) and (@id_todos_clientes = 1))    
  begin    
    
   if convert(int, @cd_cliente_resumir) > 0    
    while @cd_cliente_int <> @cd_cliente_resumir    
     fetch next from cr_clientes into @cd_cliente_int    
    
  end    
    
  --Cursor Clientes    
    
  while @@fetch_status = 0    
  begin    
    
   update dbo.tsv_status_varredura    
   set  cd_atual = @cd_cliente_int,    
     vl_contador_atual = vl_contador_atual + 1,    
     vl_tempo_carga_cliente = getdate() - @hr_ultimo_cliente    
   where cd_varredura_aut = @cd_varredura_aut    
    
   set @hr_ultimo_cliente = getdate()    
    
   set @vl_total_mov = 0    
    
   if (@id_automatica = 1) --Cursor Varreduras    
   begin    
    
    declare cr_varredura cursor    
    
    for    
    
    select  rpe.cd_enquadramento,     
      rpe.nm_stored_proc    
    from  dbo.tpr_relac_produto_enquad rpe with (nolock)     
    join dbo.tpr_enquadramento       enq with (nolock) on rpe.cd_enquadramento = enq.cd_enquadramento    
    where  rpe.cd_produto = @cd_produto_int    
    and  enq.id_mensal  = @id_mensal    
    and  enq.id_status  = 1    
    
   end    
   else    
   begin    
    
    declare cr_varredura cursor    
    for    
    
    select rpe.cd_enquadramento,     
       rpe.nm_stored_proc    
    from   dbo.tpr_relac_produto_enquad rpe with (nolock)     
    join  dbo.tpr_relac_produto_enquad_param rpem with (nolock) on rpe.cd_produto = rpem.cd_produto    
    and  rpe.cd_enquadramento  = rpem.cd_enquadramento     
    join  dbo.tpr_parametro_manual  pm with (nolock) on rpem.cd_produto = pm.cd_produto    
    and   rpem.cd_enquadramento = pm.cd_enquadramento     
    and   rpem.cd_contador  = pm.cd_contador     
    where  pm.id_varr_manual = 1    
    and   pm.cd_usuario  = @cd_usuario    
    and   rpe.cd_produto = @cd_produto_int    
    group by rpe.cd_produto, rpe.cd_enquadramento, rpe.nm_stored_proc    
    order by rpe.cd_produto, rpe.cd_enquadramento    
    
   end    
    
   open cr_varredura    
   fetch next from cr_varredura into @cd_enquadramento, @nm_stored_proc    
    
   --Cursor Enquadramentos    
    
   while @@fetch_status = 0    
    
   begin    
    
    if @cd_usuario is null    
    
    begin    
    
     set @dc_execucao_sp = 'exec ' + RTRIM(LTRIM(@nm_stored_proc)) + ' ' + CONVERT(VARCHAR,@cd_cliente_int) + ', ' + CONVERT(VARCHAR,@cd_enquadramento) + ', ' +    
      CONVERT(VARCHAR,@cd_produto_int) + ', ''' + CONVERT(VARCHAR, @dt_inicio, 101) + ''', ''' +    
      CONVERT(VARCHAR, @dt_final, 101) + ''', ' + CONVERT(VARCHAR,CONVERT(MONEY,@vl_total_mov)) + ', ' +    
      CONVERT(VARCHAR,@id_automatica) + ', ' + CONVERT(VARCHAR, @id_resumir)    
    
    end    
    else    
    begin    
    
     set @dc_execucao_sp = 'exec ' + RTRIM(LTRIM(@nm_stored_proc)) + ' ' + CONVERT(VARCHAR,@cd_cliente_int) + ', ' + CONVERT(VARCHAR,@cd_enquadramento) + ', ' +    
      CONVERT(VARCHAR,@cd_produto_int) + ', ''' + CONVERT(VARCHAR, @dt_inicio, 101) + ''', ''' +    
      CONVERT(VARCHAR, @dt_final, 101) + ''', ' + CONVERT(VARCHAR,CONVERT(MONEY,@vl_total_mov)) + ', ' +    
      CONVERT(VARCHAR,@id_automatica) + ', ' + CONVERT(VARCHAR, @id_resumir) + ', ' + convert(varchar, @cd_usuario)    
    
    end    
    
    exec sp_sqlexec @dc_execucao_sp;    
    
    --print @dc_execucao_sp     
    
    fetch next from cr_varredura into @cd_enquadramento, @nm_stored_proc    
    
   end    
    
   --Fecha cursor Enquadramentos    
    
   close cr_varredura    
   deallocate cr_varredura    
    
   fetch next from cr_clientes into @cd_cliente_int    
    
   if (@id_todos_clientes = 1)    
    set @id_resumir = 0;    
    
  end    
    
  --Fecha cursor Clientes    
    
  close cr_clientes    
  deallocate cr_clientes    
    
  if (@id_todos_clientes = 1)                                                                                                                                                                           
  begin    
    
   update dbo.tsv_status_varredura    
   set  dt_termino   = getdate(),    
     cd_atual     = '000',    
     id_terminado = 1    
   where cd_varredura_aut = @cd_varredura_aut;    
    
  end    
    
  --Limpa a tabela temp    
    
  delete from #ttp_cliente;    
  fetch next from cr_produtos into @cd_produto_int    
    
 end    
    
 --Fecha cursor produtos    
    
 close cr_produtos    
 deallocate cr_produtos    
    
 --Dropa a tabela temp    
    
 drop table #ttp_cliente    
    
end try    
begin catch    
    
   exec dbo.spgr_tratar_erro;     
    
end catch    